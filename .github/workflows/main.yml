# This workflow will cut a release candidate and deploy to heroku (in progress) based on cron settings.


name: CI

on:
  #schedule:
  #- cron: "0 15 * * 1-4"

  workflow_dispatch:


jobs:
  build:
    # env: 
    #   HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: set env
        run: echo "NOW=$(date +'%Y.%m.%d.%H%M%S')" >> $GITHUB_ENV
             echo "TAG_NAME='RC-'+${{ env.NOW }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Create Release Candidate
        uses: actions/github-script@v6
        with:
          script: |
            const tag = "${{ env.TAG_NAME }}";
            const message = `Bot - ${tag}`;
            const createTagResponse = await github.rest.git.createTag({
              ...context.repo,
              tag: tag,
              message: message,
              object: context.sha,
              type: "commit"
            })
            await github.rest.git.createRef({
              ...context.repo,
              ref: `refs/tags/${tag}`,
              sha: createTagResponse.data.sha
            })
            const releaseNotesResponse = await github.rest.repos.generateReleaseNotes({
              ...context.repo,
              tag_name: tag
            })
            await github.rest.repos.createRelease({
              ...context.repo,
              tag_name: tag,
              name: 'Scheduled ' + tag,
              body: releaseNotesResponse.data.body,
              draft: true
            })
      - name: Deploy Release Candidate
          #run: heroku login
        run: git push -f https://git.heroku.com/murmuring-lake-14134.git "${{ env.TAG_NAME }}"^{}:master
          
      # get output for git ref
      # - name: Login to Heroku
      #   run: heroku login 
      # - name: Push to Heroku Remote
      #   run: git push -f https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/trada-dev1.git origin/master:master