# This is a basic workflow to help you get started with Actions

name: CI

on:
  #schedule:
  #- cron: "0 15 * * 1-4"

  workflow_dispatch:


jobs:
  build:
    # env: 
    #   HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: set env
        run: echo "NOW=$(date +'%Y.%m.%d.%H%M%S')" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            const tag = "RC-${{ env.NOW }}";
            const message = `version ${tag}`;
            const createTagResponse = await github.rest.git.createTag({
              ...context.repo,
              tag: tag,
              message: message,
              object: context.sha,
              type: "commit"
            })
            await github.rest.git.createRef({
              ...context.repo,
              ref: `refs/tags/${tag}`,
              sha: createTagResponse.data.sha
            });        
      - name: Create Release Candidate
        uses: softprops/action-gh-release@v0.1.14
        with:
          #body_path: ${{ github.workspace }}-CHANGELOG.txt
          body: test release process
          draft: true
          prerelease: true
          tag_name: RC-${{ env.NOW }}
          #repository: # optional
          generate_release_notes: true
      # get output for git ref
      # - name: Login to Heroku
      #   run: heroku login 
      # - name: Push to Heroku Remote
      #   run: git push -f https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/trada-dev1.git origin/master:master

        
      # await github.rest.repos.createRelease({
      #   owner: context.repo.owner,
      #   tag_name: env.VERSION_NAME,
      #   name: env.VERSION_NAME,
      #   generate_release_notes: true
      # });

      # github.rest.git.createRef({
      #   owner: context.repo.owner,
      #   repo: context.repo.repo,
      #   ref: 'refs/tags/RC-${{ env.NOW }}',
      #   sha: context.sha
      # })
      # tagger: {
      #           name: "Eritque arcus",
      #            email: "1930893235@qq.com"
      #          }

            #       await github.rest.repos.createRelease({
            #   ...context.repo,
            #   tag_name: tag,
            #   name: 'Version ' + tag,
            #   generate_release_notes: true
            # })